#include<bits/stdc++.h>
using namespace std;

#define pb push_back
#define pii pair<int,int>
#define ll long long
#define pll pair<long,long>
#define vi vector<int>
#define vii vector<pii>
#define vll vector<ll>
#define MOD 1000000007
#define EPS 1e-7
#define mem(x,y) memset(x,y,sizeof x)
#define MAX 4e18
#define ff(i,a,b) for(int i=(a);i<=(b);i++)
#define fb(i,a,b) for(int i=(a);i>=(b);i--)

class compare{
public:
    bool operator()(pii x,pii y){
        if(x.second==y.second){
            return x.first<y.first;
        }
        return x.second<y.second;
    }
};
int Set(int N,int pos) { return N=N|(1<<pos); }
int reset(int N,int pos){ return N=N&~(1<<pos);}
bool check(int N,int pos){  return (bool) (N&(1<<pos));}

int main()
{
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);

    int n;
    cin>>n;

    ll dp[n+1];

    ll temp[n+1];

    mem(dp,0);
    mem(temp,0);

    ll cnt=0;
    cnt++;
    //dp[1]++;

    int a1; cin>>a1;

    ff(i,2,n){
        int a;
        cin>>a;
        dp[1]=(dp[1]+1)%MOD;
        cnt=(cnt+1)%MOD;
        temp[1]=dp[1];
        vi index;

        for(int j=1;j<=sqrt(a) and j<=i;j++){
            if(a%j==0){
                cnt=(cnt+dp[j-1])%MOD;
                temp[j]=(dp[j-1]+dp[j])%MOD;
                index.pb(j);

                if(j!=sqrt(a) and a/j<=i){
                    cnt=(cnt+dp[a/j-1])%MOD;
                    temp[a/j]=(dp[a/j-1]+dp[a/j])%MOD;
                    index.pb(a/j);
                }
            }
            else{
                temp[j]=dp[j];
            }
        }

        int siz=index.size();

        ff(j,0,siz-1) dp[index[j]]=temp[index[j]];



    }

    cout<<cnt<<endl;

    return 0;
}
